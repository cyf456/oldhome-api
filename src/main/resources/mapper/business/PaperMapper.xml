<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xydl.web.business.dao.PaperMapper">
    <!--    根据机构id查询问卷-->
    <select id="selectPaperByOrganizationId" parameterType="java.util.Map" resultType="java.util.Map">
    select
    paper_id as paperId,
    paper_name as paperName,
    paper_desc as paperDesc,
    paper_sort as paperSort,
    expected_complete_time as expectedCompleteTime
    from t_paper
    where organization_id = #{organizationId} and paper_status = '2';
    </select>
    <!--    根据问卷id查询题目-->
    <select id="selectQuestionByPaperId" parameterType="java.util.Map" resultType="java.util.Map">
        select
        question_id as questionId,
        paper_id as paperId,
        question_type as questionType,
        question_name as questionName,
        question_desc as questonDesc,
        question_sort as questionSort,
        required_flag as requiredFlag
        from t_question
        where paper_id = #{paperId} ORDER BY question_sort ASC
    </select>
    <!--  根据问卷id查询选项  -->
    <select id="selectOptionByPaperId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        option_id as optionId,
        paper_id as paperId,
        question_id as questionId,
        option_content as optionContent,
        option_score as optionScore,
        option_sort as optionSort
        from t_option
        WHERE paper_id = #{paperId} ORDER BY option_sort ASC
    </select>
    <!--   根据optionId查询选项 -->
    <select id="selectOptionByOptionId" parameterType="java.util.Map" resultType="java.util.Map">
        select
        option_id as optionId,
        paper_id as paperId,
        question_id as questionId,
        option_content as optionContent,
        option_score as optionScore,
        option_sort as optionSort
        from t_option where option_id = #{optionId}
    </select>
    <!--  保存回答结果answer  -->
    <insert id="batchSaveAnswerList" parameterType="java.util.Map">
        INSERT into t_answer(
        answer_id,
        survey_user_id,
        paper_result_id,
        paper_id,
        question_id,
        option_id,
        option_content,
        answer_score,
        create_time
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.answerId},
            #{item.surveyUserId},
            #{item.paperResultId},
            #{item.paperId},
            #{item.questionId},
            #{item.optionId},
            #{item.optionContent},
            #{item.answerScore},
            now()
            )
        </foreach>
    </insert>
    <!-- 查询指定问卷的题目数量-->
    <select id="questionNumByPaperId" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) AS questionNum from t_question where paper_id = #{paperId}
    </select>
    <!--  查询指定paper_id和survey_user_id并根据question分组，返回组数  -->
<!--    <select id="answerNumByQuestion" parameterType="java.util.Map" resultType="java.lang.Integer">-->
<!--        SELECT count(*) AS answerNum from (SELECT count(*) from t_answer WHERE paper_id = #{paperId} and survey_user_id = #{surveyUserId} GROUP BY question_id)answer-->
<!--    </select>-->
    <!--  根据appUserId查询问卷结果  -->

    <select id="selectResultByAppUserId" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    r.paper_result_id as paperResultId,
    r.app_user_id as appUserId,
    r.survey_user_id as surveyUserId,
    r.paper_id as paperId,
    r.paper_name as paperName,
    r.paper_score as paperScore,
    r.result_status as resultStatus,
    DATE_FORMAT(r.create_time, '%Y-%m-%d') as createTime,
    g.grade_name AS gradeName
    from t_paper_result as r INNER JOIN t_paper_grade as g
    ON r.paper_id = g.paper_id
    WHERE
    r.app_user_id = #{appUserId}
    AND r.paper_score BETWEEN g.min_score and g.max_score
    </select>
    <!--  根据评估结果id查询评估结果  -->
<!--    SELECT-->
<!--    survey_user_id AS surveyUserId,-->
<!--    paper_id AS paperId,-->
<!--    paper_name AS paperName,-->
<!--    paper_score AS paperScore,-->
<!--    result_status as resultStatus,-->
<!--    DATE_FORMAT(create_time, '%Y-%m-%d') as createTime-->
<!--    from t_paper_result where paper_result_id = #{paperResultId}-->
    <select id="selectResultByResultId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
		r.survey_user_id AS surveyUserId,
        r.paper_id AS paperId,
        r.paper_name AS paperName,
        r.paper_score AS paperScore,
        r.result_status AS resultStatus,
        DATE_FORMAT(r.create_time, '%Y-%m-%d') as createTime,
		g.grade_name AS gradeName
        from t_paper_result as r INNER JOIN t_paper_grade as g
        ON r.paper_id = g.paper_id
        WHERE
        r.paper_result_id = #{paperResultId}
        AND r.paper_score BETWEEN g.min_score and g.max_score
    </select>
    <!--  根据评估结果id查询回答的选项  -->
    <select id="selectAnswerByResultId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT answer_id as answerId,
        option_id as optionId
        FROM t_answer
        where paper_result_id = #{paperResultId}
    </select>

    <select id="selectOptionByOptionListId" parameterType="java.util.Map" resultType="java.util.Map">
        select
        option_id as optionId,
        option_content as optionContent,
        question_id as questionId,
        paper_id as paperId,
        option_score as answerScore
        from t_option
        where option_id in (
        <foreach collection="list" item="item" index="index" separator=",">
        #{item.optionId}
        </foreach>
        )
    </select>
    <select id="selectResultBySurveyId" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        survey_user_id AS surveyUserId,
        paper_id AS paperId,
        paper_name AS paperName,
        paper_score AS paperScore,
        result_status as resultStatus,
        DATE_FORMAT(create_time, '%Y-%m-%d') as createTime
        from t_paper_result where survey_user_id = #{surveyUserId}
    </select>
    <!--添加paperResult-->
    <insert id="insertPaperResult" parameterType="java.util.Map">
    INSERT INTO t_paper_result(
    paper_result_id,
    app_user_id,
    survey_user_id,
    paper_id,
    paper_name,
    paper_score,
    result_status,
    create_time
    )
    VALUES
    (
    #{paperResultId},
    #{appUserId},
    #{surveyUserId},
    #{paperId},
    #{paperName},
    #{paperScore},
    #{resultStatus},
    now()
    )
    </insert>
<!--    根据问卷回答结果id删除问卷-->
    <delete id="deleteResultByResultId" parameterType="java.util.Map">
        delete from t_paper_result where paper_result_id = #{paperResultId}
    </delete>
<!-- 根据问卷被调查老人id和问卷id删除回答结果-->
<!--    <delete id="deleteAnswerByPaperId" parameterType="java.util.Map">-->
<!--        delete from t_answer where survey_user_id = #{surveyUserId} and paper_id = #{paperId}-->
<!--    </delete>-->
    <delete id="deleteAnswerByResultId" parameterType="java.util.Map">
        delete from t_answer where paper_result_id = #{paperResultId}
    </delete>
    <!--  修改SurveyUser  -->
    <update id="updatePaperResult" parameterType="java.util.Map">
        UPDATE t_paper_result
        set paper_score = #{paperScore},
            result_status = #{resultStatus},
            create_time = now()
        where paper_result_id = #{paperResultId}
    </update>
</mapper>